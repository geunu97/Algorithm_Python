#LV2 2개 이하로 다른 비트

def solution(numbers):
    result=[]
    for num in numbers:
        if num == 1:
            result.append(num+1)
            continue
        
        if num % 2 == 0:
            result.append(num+1)
            continue
            
        if num == 3:
            result.append(num+2)
            continue
        
        for i in range(2, num):
            if(num % (2**i)) == (2**(i-1) - 1):
                result.append(num + 2**(i-2))
                break
    
    return result


#Point
#단순하게 이진법 변환 후 하나하나 비교하면 시간초과


#뒤에서 1번째 비트가 0일 경우  =>   +1 해주면 답이 된다     [1,2,4,6,8,10 ...]
#100 -> 101    (바로 다음 수와, 비트 1개만 다르다)

#뒤에서 1번째 비트가 0이 아니고, 뒤에서 2번째 비트가 0일 경우 => +1 해주면 답이 된다 [5,9,13,17,21,25,29 ...]
#101 -> 110    (바로 다음 수와, 비트 2개만 다르다)

#뒤에서 1번째 비트 0이 아니고, 뒤에서 2번째 비트 0이 아니고, 뒤에서 3번째 비트가 0일 경우 => +2 해주면 답이 된다
#1011 -> 1100 -> 1101    (바로 다음수와 비트 3개 다르다X, 그 다음 수와 비트 2개만 다르다)


#... ... 뒤에서 4번째 비트가 0일 경우 =>   +4 해주면 답이 된다
#10111 -> 11011    (..., 4번 다음 수가 비트 2개만 다르다)


#... ... 뒤에서 5번째 비트가 0일 경우 =>   +8 해주면 답이 된다
#101111 ->       

#--------------------------------------------------------------
#2^i 로 나누면 2^(i-1)-1 나머지가 나오는데, 이 때 2^i(i-2)만큼 더해주면 된다   #이 부분 다시 보기