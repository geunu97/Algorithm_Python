def solution(m, n, board):
    graph = [[0] * n for _ in range(m)]
    for x in range(m):
        for y in range(n):
            graph[x][y] = board[x][y]
    
    for i in graph:
        print(i)   
    
    while True:
        result = []
        for x in range(m-1):
            for y in range(n-1):
                start_value = graph[x][y]
                if start_value != 0 and start_value == graph[x][y+1] and start_value == graph[x+1][y] and start_value == graph[x+1][y+1]:
                    result.append([x,y]) 
                    result.append([x,y+1]) 
                    result.append([x+1,y]) 
                    result.append([x+1,y+1]) 
        
        if len(result) == 0:
            break

        for x,y in result:
            graph[x][y] = 0
        
        for y in range(n):
            while True:
                change = 0
                for x in range(m-1):
                    if graph[x][y] != 0 and graph[x+1][y] == 0:
                        graph[x+1][y], graph[x][y] = graph[x][y], graph[x+1][y]
                        change = 1
                
                if change == 0:
                    break
    
    for i in graph:
        print(i)
                    
    answer = 0
    for i in range(m):
        for j in range(n):
            if graph[i][j] == 0:
                answer += 1

    return answer


# dfs, bfs 필요하지 않다
# 완전탐색