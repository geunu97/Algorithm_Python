#Part6. 다이나믹 프로그래밍(DP)
#문제 6. N일 동안 최대 금액 구하기 
#       // 아래 예시로 1일을 선택했을 때 다음은 4일 이후로 선택할 수 있다. // N+1일 이후로는 상담할 수 없기 때문에 6일,7일에는 선택할 수 없다


N = int(input())
list_a = []
for i in range(N):
    a,b = map(int,input().split())
    list_a.append([a,b])

dp=[0] * (N + 1)

for i in range(N-1,-1,-1):
    if i + list_a[i][0] > N:    #상담 종료가 퇴사 날짜 이후
        dp[i] = dp[i+1]
    else:   #상담 종료가 퇴사 날짜 이전
        dp[i] = max(dp[i+list_a[i][0]] + list_a[i][1], dp[i+1])

print(dp[0])

#Point
#N일 이내로 무조건 끝내야하기 때문에 이 문제는 뒤에서부터 풀기

#N이 7일떄   1일 2일 3일 4일 5일 6일 7일 
#   시간 T    3   5   1   1   2   4   2
#   금액 P   10  20  10  20  15  40  200
 
#   DP테이블 45  45  45  35  15   0   0   0      
#                                    <- 방향 


#식 세우기
#1. 상담 종료 날짜가 퇴사 날 보다 이후라면 이전에 계산해 준 dp[i+1]을 dp[i]에 저장
#2. 퇴사 날 보다 이전이라면 이전에 계산해 준 (dp[i+1]과 dp[상담 종료 날짜]+받을 금액) 중에 큰 금액을 저장해 준다  (ex) 2일때로 계산시 max(3일의45 or 7일의0 + 2일의20))  

