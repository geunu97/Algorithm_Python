#Part6. 다이나믹 프로그래밍(DP)
#문제 3. 2 * M 길이의 바닥과  (1 * 2 타일, 2 * 1 타일, 2 * 2 타일)이 있을 때 타일로 바닥을 채우는 모든 경우의 수 구하기 


N = int(input())

#DP테이블
dp = [0] * 1001

dp[1] = 1
dp[2] = 3

for i in range(3, N+1):  #보텀업 방식
    dp[i] = (dp[i-1] + 2*dp[i-2]) % 796796   #중요!

print(dp[N])


#Point
#식 세우기
#2가지로 나눌 수 있음
#1) 왼쪽부터 n-1의 길이까지 덮어져 있을 때 마지막에 2 * 1 덮개를 하나 채우기 (1가지)
#2) 왼쪽부터 n-2의 길이까지 덮어져 있을 때 마지막에 1 * 2 덮개 2개 넣는 경우, 또는 2 * 2 덮개 하나를 넣는 경우 (2가지)

# a(i) = a(i-1) + a(i-2) * 2


